#ifndef LOGAPI_2013_12_23
#define LOGAPI_2013_12_23

#ifdef _LINUX_
#define _declspec(dllexport)
#endif

extern "C"
{

	///////////////////////////////////////////////////////////////////////////////////////////////////
	// LogInitlize 日志初始化接口 
	// 参数：
	//    pLogPath:       日志文件的路径，包含文件名，生成的日志文件为 LogPath + "_文件序号" + ".log"。允许传入最大长度为1024字节（包含0结束符）
	//    usMaxFileSize： 单个日志文件最大容量，单位为K，默认2*1024（2M），最大允许设置为10*1024 （10M），最小允许设置为200。实际生成的日志文件大小在usMaxFileSize+10之间
	//    ucMaxFileCount：最多允许记录的文件个数，默认为10，最大允许设置为100，最小允许设置为1，当文件个数达到此值后，再生成新文件时会删除最早记录的文件。
	// 返回值：
	//    true表示成功，false表示失败。当返回失败时，会向stderror输出错误信息。
	// 注意：
	//    本接口不支持多线程调用。
	///////////////////////////////////////////////////////////////////////////////////////////////////

	_declspec(dllexport) bool LogInitialize(const char *pLogPath, unsigned short usMaxFileSize = 2*1024, unsigned char ucMaxFileCount = 10);

	///////////////////////////////////////////////////////////////////////////////////////////////////
	// WriteLogInfo 写日志信息接口
	// 参数：
	//    ucLogLevel： 日志级别，见枚举 ENUM_LOG_LEVEL
	//    pLogFormat:  日志信息格式，和后面附加数据一起组成具体日志信息，一条格式化过后的日志信息长度不能超过1024字节（包括0结束符），否则会被截断。
	// 注意：
	//    本接口必须在调用LogInitlize成功之后调用。
	//    本接口支持多线程调用。
	//    当前缓存的日志信息大于200*1024字节，或者从上一次刷新日志文件至今大于5s，才写将缓存的日志信息刷新到文件中。
	///////////////////////////////////////////////////////////////////////////////////////////////////

	_declspec(dllexport) void WriteLogInfo(unsigned char ucLogLevel, char* pLogFormat, ...);

	///////////////////////////////////////////////////////////////////////////////////////////////////
	// LogExit 日志退出接口
	// 注意：
	//    本接口不支持多线程调用。
	///////////////////////////////////////////////////////////////////////////////////////////////////

	_declspec(dllexport) void LogExit();

	///////////////////////////////////////////////////////////////////////////////////////////////////
	// 设置日志级别
	// 参数:
	//    ucLogLevel: 允许的日志级别，只有小于等于此级别的日志才会被记录，具体值见枚举 ENUM_LOG_LEVEL。
	// 注意：
	//    本接口必须在调用LogInitlize成功之后调用，传入的ucLogLevel值不能大于LOG_DEBU，否则返回失败。
	//    本接口不支持多线程调用。
	//返回值：
	//    true表示成功，false表示失败。
	///////////////////////////////////////////////////////////////////////////////////////////////////

	_declspec(dllexport) bool SetLogLevel(unsigned char ucLogLevel);


	enum ENUM_LOG_LEVEL
	{
		LEVEL_ERRO = 0,
		LEVEL_WARN = 1,
		LEVEL_INFO = 2,
		LEVEL_DEBU = 3,

		MAX_LOG_LEVEL   = LEVEL_DEBU
	};
};

#endif